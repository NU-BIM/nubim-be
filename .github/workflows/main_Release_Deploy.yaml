name: main Repository Release Deploy
run-name: "main Deploy: Triggered by ${{ github.actor }}"

env:
  AWS_DEFAULT_REGION: ap-northeast-2

on:
  release:
    types:
      - published

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      RELEASE_VERSION: ${{ github.event.release.tag_name }}

    steps:
      - name: Display Release Information
        run: |
          echo "Release Version: ${{ env.RELEASE_VERSION }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions_be

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_PROD_REPOSITORY }}
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: arn:aws:iam::381492281776:role/github-actions_be

      - name: Deploy to Amazon ECS
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.AWS_ECS_CLUSTER_NAME }} \
            --service ${{ secrets.AWS_ECS_SERVICE_NAME }} \
            --region ${{ env.AWS_DEFAULT_REGION }}
            --force-new-deployment \

