name: Pull Request Test
run-name: "Build and Test: Trigger by ${{ github.actor }}"

on:
  pull_request:
    branches:
      - dev
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    services:
      postgres:
        image: postgres:16.3
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME_GITHUB_ACTIONS }}
          POSTGRES_USER: ${{ secrets.DB_USER_GITHUB_ACTIONS }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD_GITHUB_ACTIONS }}
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    

    steps:
      # Display PR info
      - name: Display PR information
        run: |
          echo "Pull Request from: ${{ github.event.pull_request.head.ref }}"
          echo "Pull Request to: ${{ github.event.pull_request.base.ref }}"
          echo "Pull Request author: ${{ github.event.pull_request.user.login }}"  

      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-


      # Run build and test
      - name: Run tests and build
        run: ./gradlew build
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DB_NAME: ${{ secrets.DB_NAME_GITHUB_ACTIONS }}
          DB_USER: ${{ secrets.DB_USER_GITHUB_ACTIONS }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD_GITHUB_ACTIONS }}
          REDIS_HOST: redis